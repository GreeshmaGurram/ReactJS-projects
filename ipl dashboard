import {Route, Switch} from 'react-router-dom'
import Home from './components/Home/index'
import TeamMatches from './components/TeamMatches/index'
import NotFound from './components/NotFound/index'
import './App.css'

const App = () => (
  <Switch>
    <Route exact path="/" component={Home} />
    <Route exact path="/team-matches/:id" component={TeamMatches} />
    <Route component={NotFound} />
  </Switch>
)

export default App

import {Component} from 'react'
import Loader from 'react-loader-spinner'
import TeamCard from '../TeamCard/index'
import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'
import './index.css'

class Home extends Component {
  state = {
    isTeamsApiLoading: true,
    teamsList: [],
  }

  componentDidMount() {
    this.getTeamsListApi()
  }

  getTeamsListApi = async () => {
    const response = await fetch('https://apis.ccbp.in/ipl')
    const data = await response.json()
    const formattedTeamsList = data.teams.map(team => ({
      name: team.name,
      id: team.id,
      teamImageUrl: team.team_image_url,
    }))
    this.setState({isTeamsApiLoading: false, teamsList: formattedTeamsList})
  }

  render() {
    const {isTeamsApiLoading, teamsList} = this.state
    return (
      <div>
        <img
          alt="ipl logo"
          src="https://assets.ccbp.in/frontend/react-js/ipl-logo-img.png"
        />
        <h1>IPL Dashboard</h1>
        <div>
          {isTeamsApiLoading ? (
            <div testid="loader">
              <Loader type="Oval" color="#ffffff" height={50} width={50} />
            </div>
          ) : (
            <ul>
              {teamsList.map(team => (
                <TeamCard key={team.id} team={team} />
              ))}
            </ul>
          )}
        </div>
      </div>
    )
  }
}

export default Home

import {Link} from 'react-router-dom'
import './index.css'

const TeamCard = props => {
  const {team} = props
  const {name, teamImageUrl, id} = team

  return (
    <Link to={`/team-matches/${id}`}>
      <li>
        <img src={teamImageUrl} alt={name} className="team-imag-url" />
        <p>{name}</p>
      </li>
    </Link>
  )
}

export default TeamCard

import {Component} from 'react'
import Loader from 'react-loader-spinner'
import LatestMatch from '../LatestMatch/index'
import MatchCard from '../MatchCard/index'
import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'

export default class TeamMatches extends Component {
  state = {
    isTeamDetailsLoading: true,
    teamDetails: {},
  }

  componentDidMount() {
    this.getTeamDetails()
  }

  getTeamDetails = async () => {
    const {match} = this.props
    const {params} = match
    const {id} = params
    const response = await fetch(`https://apis.ccbp.in/ipl/${id}`)
    const data = await response.json()
    const formattedData = {
      teamBannerUrl: data.team_banner_url,
      latestMatchDetails: {
        id: data.latest_match_details.id,
        umpires: data.latest_match_details.umpires,
        result: data.latest_match_details.result,
        competingTeam: data.latest_match_details.competing_team,
        date: data.latest_match_details.date,
        venue: data.latest_match_details.venue,
        result: data.latest_match_details.result,
        firstInnings: data.latest_match_details.first_innings,
        secondInnings: data.latest_match_details.second_innings,
        manOfThematch: data.latest_match_details.man_of_the_match,
        competingTeamLogo: data.latest_match_details.competing_team_logo,
      },
      recentMatches: data.recent_matches.map(eachMatch => ({
        id: eachMatch.id,
        result: eachMatch.result,
        matchStatus: eachMatch.match_status,
        competingTeam: eachMatch.competing_team,
        competingTeamLogo: eachMatch.competing_team_logo,
      })),
    }
    this.setState({
      isTeamDetailsLoading: false,
      teamDetails: formattedData,
    })
  }

  render() {
    const {isTeamDetailsLoading, teamDetails} = this.state
    return (
      <div>
        {isTeamDetailsLoading ? (
          <div testid="loader">
            <Loader type="TailSpin" color="#00BFFF" height={50} width={50} />
          </div>
        ) : (
          <div>
            <img src={teamDetails.teamBannerUrl} alt="team banner" />
            <LatestMatch latestMatchDetails={teamDetails.latestMatchDetails} />
            <ul>
              {teamDetails.recentMatches.map(recentMatch => (
                <MatchCard recentMatch={recentMatch} key={recentMatch.id} />
              ))}
            </ul>
          </div>
        )}
      </div>
    )
  }
}



// Write your code here
const LatestMatch = props => {
  const {latestMatchDetails} = props
  return (
    <div>
      <p>{latestMatchDetails.competingTeam}</p>
      <img
        src={latestMatchDetails.competingTeamLogo}
        alt={`latest match ${latestMatchDetails.competingTeam}`}
      />
      <p>Umpires</p>
      <p>{latestMatchDetails.umpires}</p>
      <p>{latestMatchDetails.date}</p>
      <p>{latestMatchDetails.venue}</p>
      <p>{latestMatchDetails.result}</p>
      <p>{latestMatchDetails.firstInnings}</p>
      <p>{latestMatchDetails.secondInnings}</p>
      <p>{latestMatchDetails.manOfTheMatch}</p>
    </div>
  )
}

export default LatestMatch



// Write your code here
const MatchCard = props => {
  const {recentMatch} = props
  return (
    <div>
      <img
        src={recentMatch.competingTeamLogo}
        alt={`competing team ${recentMatch.competingTeam}`}
      />
      <p>{recentMatch.competingTeam}</p>
      <p>{recentMatch.result}</p>
      <p>{recentMatch.matchStatus}</p>
    </div>
  )
}

export default MatchCard



// Write your code here
const NotFound = () => <h1>Page Not Found</h1>

export default NotFound
